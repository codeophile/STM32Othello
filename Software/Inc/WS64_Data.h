/********************************************************************************
 WS64_DrawMaps.h
 ********************************************************************************/

#ifndef INC_WS64_DrawMaps_H_
#define INC_WS64_DrawMaps_H_

//Patterns for testing
uchar pattern[][8] = {
	{ 0x00, 0x3e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x3e }, //letter O
	{ 0x00, 0x01, 0x01, 0x01, 0x7f, 0x01, 0x01, 0x01 }, //letter T
	};

const uchar snakeMap0[] = {
	//TOP LEFT TOWARDS BOTTOM LEFT
	0, 1, 2, 3, 4, 5, 6, 7,
	15, 14, 13, 12, 11, 10, 9, 8,
	16, 17, 18, 19, 20, 21, 22, 23,
	31, 30, 29, 28, 27, 26, 25, 24,
	32, 33, 34, 35, 36, 37, 38, 39,
	47, 46, 45, 44, 43, 42, 41, 40,
	48, 49, 50, 51, 52, 53, 54, 55,
	63, 62, 61, 60, 59, 58, 57, 56,
};

const uchar snakeMap1[] = {
	//TOP LEFT CW TO LOWER LEFT CENTER
	0, 1, 2, 3, 4, 5, 6, 7,
	15, 23, 31, 39, 47, 55, 63,
	62, 61, 60, 59, 58, 57, 56,
	48, 40, 32, 24, 16, 8,
	//2nd
	9, 10, 11, 12, 13, 14,
	22, 30, 38, 46, 54,
	53, 52, 51, 50, 49,
	41, 33, 25, 17,
	//3rd
	18, 19, 20, 21,
	29, 37, 45,
	44, 43, 42,
	34, 26,
	//4th
	27, 28, //36,35
	};
const uchar snakeMap2[] = {
	//TOP LEFT CENTER CW TO LOWER LEFT
	//4th
	27, 28, 36, 35,
	//3rd
	34, 26, 18,
	19, 20, 21,
	29, 37, 45,
	44, 43, 42, 41,
	//2nd
	33, 25, 17, 9,
	10, 11, 12, 13, 14,
	22, 30, 38, 46, 54,
	53, 52, 51, 50, 49,
	48, 40, 32, 24, 16, 8, 0,
	//1st
	1, 2, 3, 4, 5, 6, 7,
	15, 23, 31, 39, 47, 55, 63,
	62, 61, 60, 59, 58, 57, 56,
};

const uchar snakeMap3[] = {
	//BOTTOM LEFT CENTER CW TO UPPER LEFT
	//4th
	//NOTE - added extra 27 at beginning to give smoother look (?)
	27, 28, 36, 35, 27,
	//3rd
	19, 20, 21,
	29, 37, 45,
	44, 43, 42,
	34, 26, 18,
	//2nd
	10, 11, 12, 13, 14,
	22, 30, 38, 46, 54,
	53, 52, 51, 50, 49,
	41, 33, 25, 17, 9,
	//1st
	1, 2, 3, 4, 5, 6, 7, 15, 23, 31, 39, 47, 55, 63,
	62, 61, 60, 59, 58, 57, 56, 48,
	40, 32, 24, 16, 8, 0
};

//Hitachi HD44780 32to127
//Visualize 5 column bytes.
//The MSBit is the 2nd row from bottom since bottom row is always blank
//The LSB is the top row and is used.
const uchar nFont[96][5] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x00 }, //space(32)
	{ 0x00, 0x00, 0x4F, 0x00, 0x00 }, //!
	{ 0x00, 0x07, 0x00, 0x07, 0x00 }, //"
	{ 0x14, 0x7F, 0x14, 0x7F, 0x14 }, //#
	{ 0x24, 0x2A, 0x7F, 0x2A, 0x12 }, //$
	{ 0x23, 0x13, 0x08, 0x64, 0x62 }, //%
	{ 0x36, 0x49, 0x55, 0x22, 0x50 }, //&
	{ 0x00, 0x05, 0x03, 0x00, 0x00 }, //'
	{ 0x00, 0x1C, 0x22, 0x41, 0x00 }, //(
	{ 0x00, 0x41, 0x22, 0x1C, 0x00 }, //)
	{ 0x14, 0x08, 0x3E, 0x08, 0x14 }, //*
	{ 0x08, 0x08, 0x3E, 0x08, 0x08 }, //+
	{ 0x00, 0x50, 0x30, 0x00, 0x00 }, //,
	{ 0x08, 0x08, 0x08, 0x08, 0x08 }, //-
	{ 0x00, 0x60, 0x60, 0x00, 0x00 }, //.
	{ 0x20, 0x10, 0x08, 0x04, 0x02 }, ///
	{ 0x3E, 0x51, 0x49, 0x45, 0x3E }, //0
	{ 0x00, 0x42, 0x7F, 0x40, 0x00 }, //1
	{ 0x42, 0x61, 0x51, 0x49, 0x46 }, //2
	{ 0x21, 0x41, 0x45, 0x4B, 0x31 }, //3
	{ 0x18, 0x14, 0x12, 0x7F, 0x10 }, //4
	{ 0x27, 0x45, 0x45, 0x45, 0x39 }, //5
	{ 0x3C, 0x4A, 0x49, 0x49, 0x30 }, //6
	{ 0x03, 0x01, 0x71, 0x09, 0x07 }, //7
	{ 0x36, 0x49, 0x49, 0x49, 0x36 }, //8
	{ 0x06, 0x49, 0x49, 0x29, 0x1E }, //9
	{ 0x00, 0x36, 0x36, 0x00, 0x00 }, //:
	{ 0x00, 0x56, 0x36, 0x00, 0x00 }, //;
	{ 0x08, 0x14, 0x22, 0x41, 0x00 }, //<
	{ 0x14, 0x14, 0x14, 0x14, 0x14 }, //=
	{ 0x00, 0x41, 0x22, 0x14, 0x08 }, //>
	{ 0x02, 0x01, 0x51, 0x09, 0x06 }, //?
	{ 0x32, 0x49, 0x79, 0x41, 0x3E }, //@
	{ 0x7E, 0x11, 0x11, 0x11, 0x7E }, //A
	{ 0x7F, 0x49, 0x49, 0x49, 0x36 }, //B
	{ 0x3E, 0x41, 0x41, 0x41, 0x22 }, //C
	{ 0x7F, 0x41, 0x41, 0x22, 0x1C }, //D
	{ 0x7F, 0x49, 0x49, 0x49, 0x41 }, //E
	{ 0x7F, 0x09, 0x09, 0x09, 0x01 }, //F
	{ 0x3E, 0x41, 0x49, 0x49, 0x7A }, //G
	{ 0x7F, 0x08, 0x08, 0x08, 0x7F }, //H
	{ 0x00, 0x41, 0x7F, 0x41, 0x00 }, //I
	{ 0x20, 0x40, 0x41, 0x3F, 0x01 }, //J
	{ 0x7F, 0x08, 0x14, 0x22, 0x41 }, //K
	{ 0x7F, 0x40, 0x40, 0x40, 0x40 }, //L
	{ 0x7F, 0x02, 0x0C, 0x02, 0x7F }, //M
	{ 0x7F, 0x04, 0x08, 0x10, 0x7F }, //N
	{ 0x3E, 0x41, 0x41, 0x41, 0x3E }, //O
	{ 0x7F, 0x09, 0x09, 0x09, 0x06 }, //P
	{ 0x3E, 0x41, 0x51, 0x21, 0x5E }, //Q
	{ 0x7F, 0x09, 0x19, 0x29, 0x46 }, //R
	{ 0x46, 0x49, 0x49, 0x49, 0x31 }, //S
	{ 0x01, 0x01, 0x7F, 0x01, 0x01 }, //T
	{ 0x3F, 0x40, 0x40, 0x40, 0x3F }, //U
	{ 0x1F, 0x20, 0x40, 0x20, 0x1F }, //V
	{ 0x3F, 0x40, 0x38, 0x40, 0x3F }, //W
	{ 0x63, 0x14, 0x08, 0x14, 0x63 }, //X
	{ 0x07, 0x08, 0x70, 0x08, 0x07 }, //Y
	{ 0x61, 0x51, 0x49, 0x45, 0x43 }, //Z
	{ 0x7F, 0x41, 0x41, 0x00, 0x00 }, //[
	{ 0x15, 0x16, 0x7C, 0x16, 0x15 }, //'\'
	{ 0x00, 0x41, 0x41, 0x7F, 0x00 }, //]
	{ 0x04, 0x02, 0x01, 0x02, 0x04 }, //^
	{ 0x40, 0x40, 0x40, 0x40, 0x40 }, //_
	{ 0x00, 0x01, 0x02, 0x04, 0x00 }, //`
	{ 0x20, 0x54, 0x54, 0x54, 0x78 }, //a
	{ 0x7F, 0x48, 0x44, 0x44, 0x38 }, //b
	{ 0x38, 0x44, 0x44, 0x44, 0x20 }, //c
	{ 0x38, 0x44, 0x44, 0x48, 0x7F }, //d
	{ 0x38, 0x54, 0x54, 0x54, 0x18 }, //e
	{ 0x08, 0x7E, 0x09, 0x01, 0x02 }, //f
	{ 0x0C, 0x52, 0x52, 0x52, 0x3E }, //g
	{ 0x7F, 0x08, 0x04, 0x04, 0x78 }, //h
	{ 0x00, 0x44, 0x7D, 0x40, 0x00 }, //i
	{ 0x20, 0x40, 0x44, 0x3D, 0x00 }, //j
	{ 0x7F, 0x10, 0x28, 0x44, 0x00 }, //k
	{ 0x00, 0x41, 0x7F, 0x40, 0x00 }, //l
	{ 0x7C, 0x04, 0x18, 0x04, 0x78 }, //m
	{ 0x7C, 0x08, 0x04, 0x04, 0x78 }, //n
	{ 0x38, 0x44, 0x44, 0x44, 0x38 }, //o
	{ 0x7C, 0x14, 0x14, 0x14, 0x08 }, //p
	{ 0x08, 0x14, 0x14, 0x18, 0x7C }, //q
	{ 0x7C, 0x08, 0x04, 0x04, 0x08 }, //r
	{ 0x48, 0x54, 0x54, 0x54, 0x20 }, //s
	{ 0x04, 0x3F, 0x44, 0x40, 0x20 }, //t
	{ 0x3C, 0x40, 0x40, 0x20, 0x7C }, //u
	{ 0x1C, 0x20, 0x40, 0x20, 0x1C }, //v
	{ 0x3C, 0x40, 0x38, 0x40, 0x3C }, //w
	{ 0x44, 0x28, 0x10, 0x28, 0x44 }, //x
	{ 0x0C, 0x50, 0x50, 0x50, 0x3C }, //y
	{ 0x44, 0x64, 0x54, 0x4C, 0x44 }, //z
	{ 0x00, 0x08, 0x36, 0x41, 0x00 }, //{
	{ 0x00, 0x00, 0x7F, 0x00, 0x00 }, //|
	{ 0x00, 0x41, 0x36, 0x08, 0x00 }, //}
	{ 0x08, 0x08, 0x2A, 0x1C, 0x08 }, //~
	{ 0x08, 0x1C, 0x2A, 0x08, 0x08 }	 //(127)
};

#endif /* INC_WS64_DrawMaps_H_  */
